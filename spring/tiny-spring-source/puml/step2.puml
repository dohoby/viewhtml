@startuml

class BeanDefinition {
Object bean
Class  beanClass
String beanClassName
getBean(String name)
}


interface BeanFactory {
getBean(String name)
registryBeanDefinition(String name,BeanDefinition beanDefinition);
}

abstract class AbstractBeanFactory{
Map<String,BeanDefinition> concurrentHashMap
getBean(String name)
registryBeanDefinition(String name,BeanDefinition beanDefinition)
abstract Object doCreateBean(BeanDefinition beanDefinition);

}

BeanFactory <|-- AbstractBeanFactory

class AutowireCapableBeanFactory{
Object doCreateBean(BeanDefinition beanDefinition);
}

note right
Object bean = beanDefinition.getBeanClass().newInstance();
end note

AbstractBeanFactory <|-- AutowireCapableBeanFactory


@enduml